[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-agent-sdk"
version = "1.0.0"
description = "AI Agent Dev Team SDK - Core Foundation Infrastructure"
authors = [
    {name = "AI Agent SDK Team", email = "team@ai-agent-sdk.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "agents", "coordination", "sdk", "claude"]

dependencies = [
    # Core Framework
    "anthropic>=0.34.0",
    "websockets>=12.0",

    # Configuration Management
    "dynaconf>=3.2.4",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",

    # Security and Authentication
    "authlib>=1.3.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=41.0.8",

    # Database and ORM
    "asyncpg>=0.29.0",
    "sqlalchemy[asyncio]>=2.0.23",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.9",

    # Caching and Performance
    "redis[hiredis]>=5.0.1",
    "aiocache>=0.12.2",
    "lru-dict>=1.2.0",

    # HTTP Client and API
    "httpx>=0.25.2",
    "aiohttp>=3.9.1",
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",

    # Data Processing and Validation
    "jsonschema>=4.20.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",

    # Monitoring and Logging
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",

    # File System and Storage
    "watchdog>=3.0.0",
    "aiofiles>=23.2.1",

    # JSON and Data Serialization
    "orjson>=3.9.10",
    "msgpack>=1.0.7",

    # Development and Debugging
    "rich>=13.7.0",
    "typer>=0.9.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.2.0",
    "pytest-httpx>=0.25.0",
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
    "types-python-dateutil>=2.8.19.14",
    "types-redis>=4.6.0.11",
    "pre-commit>=3.6.0",
    "bandit[toml]>=1.7.5",
    "safety>=2.3.5",
]

[project.urls]
Homepage = "https://github.com/ai-agent-sdk/ai-agent-sdk"
Documentation = "https://ai-agent-sdk.readthedocs.io"
Repository = "https://github.com/ai-agent-sdk/ai-agent-sdk.git"
Issues = "https://github.com/ai-agent-sdk/ai-agent-sdk/issues"

[project.scripts]
ai-agent-sdk = "ai_agent_sdk.cli:main"
team-leader = "ai_agent_sdk.main:main"

[tool.hatch.version]
path = "src/ai_agent_sdk/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/config",
    "/system_prompts",
]

[tool.hatch.build.targets.wheel]
packages = ["src/ai_agent_sdk"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = ["E", "F", "W", "C", "I", "N", "UP", "S", "B", "A", "C4", "DTZ", "T10", "EM", "ISC", "ICN", "G", "PIE", "T20", "PT", "Q", "RSE", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PGH", "PL", "RUF"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers --strict-config"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]